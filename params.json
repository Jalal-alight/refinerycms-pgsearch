{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"PostgreSQL Full Text Search for Refinery CMS","name":"refinerycms-pgsearch","body":"# Search plugin for [RefineryCMS](http://www.refinerycms.com)\r\n[Github](http://github.com/resolve/refinerycms)\r\n\r\nBy: [JGW Maxwell](http://jgwmaxwell.com)\r\n\r\nPowered by: [pg_search](http://github.com/Casecommons/pg_search). **This only works on PostgreSQL databases, ideally 9.0+.**\r\n\r\n## Installation\r\n\r\nSimply use this by adding the following to your `Gemfile`:\r\n\r\n```ruby\r\ngem 'refinerycms-pgsearch'\r\n# or for the latest and greatest\r\ngem 'refinerycms-pgsearch', github: 'jgwmaxwell/refinerycms-pgsearch'\r\n```\r\nThen run `bundle install`, and `rails g refinery:search` to generate the migrations. Finally, run `rake db:migrate` and `rake db:seed` to finish setting up.\r\n\r\n## Check The Initializer\r\n\r\nThe default installation will search in Pages. If you wish to find results in other plugins you have created or installed, you can specify these in `config/initializers/refinery/search.rb` like so:\r\n\r\n```ruby\r\nRefinery::Search.configure do |config|\r\n    config.searchable_models = {\r\n        \"Refinery::Page\" => [:title, :all_parts],\r\n        \"Refinery::Blog::Post\" => [:title, :body]\r\n    }\r\nend\r\n```\r\nThis will index Pages and Blog Posts for you. The format is: `\"STRING_OF_MODEL_CLASS\" => [:array, :of, :attribute, :symbols]`. You might notice that Pages are indexing `:all_parts` - this is a convenience to get the content out of multiple page parts that will be defined if you use it.\r\n\r\n## To use your own Models\r\n\r\nSimple pass another line into the hash in the initializer, such as:\r\n\r\n```ruby\r\n\"Employee\" => [:name, :bio]\r\n```\r\nYou can use any public method, as well. So if you have `:first_name` and `:last_name` but a method like `name` to join them, it can be indexed.\r\n\r\n## Existing Data and Rebuilding\r\n\r\nIf at any point you need to rebuild your search index, run `rake refinery:search:rebuild` to update all your search records!\r\n\r\n## Searching and Viewing\r\n\r\nA sample search form can be found in [views/refinery/shared/_search.html.erb](http://github.com/jgwmaxwell/refinerycms-pgsearch/blob/master/app/views/refinery/shared/_search.html.erb).\r\nYou can either use this partial directly, or copy the appropriate parts.\r\n\r\nIf you wish to override the url used in the search results just add a `url` method to your model and the result of this method will be used instead.\r\n\r\n## Migrating from refinerycms-search\r\n\r\nYou'll need to run the generator, migrate the database, update the new initializer and remove the old code from `application.rb`. Then remove the `acts_as_indexed` statements from your models but otherwise it should be good to go. Let me know if you need help."}